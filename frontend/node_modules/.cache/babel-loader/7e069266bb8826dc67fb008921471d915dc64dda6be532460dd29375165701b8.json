{"ast":null,"code":"var _jsxFileName = \"D:\\\\Others\\\\0 Assignments\\\\Asho_Todo_List\\\\todo-app\\\\frontend\\\\src\\\\components\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTaskText, setNewTaskText] = useState('');\n  const [editingTask, setEditingTask] = useState(null);\n  const [editingText, setEditingText] = useState('');\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/tasks');\n      setTasks(response.data);\n    } catch (error) {\n      console.error('Failed to fetch tasks:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const handleAddTask = async e => {\n    e.preventDefault();\n    if (!newTaskText.trim()) return;\n    try {\n      await axios.post('http://localhost:5000/api/tasks', {\n        text: newTaskText\n      });\n      setNewTaskText('');\n      fetchTasks(); // Re-fetch tasks to update list\n    } catch (error) {\n      console.error('Failed to add task:', error);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      await axios.delete(`http://localhost:5000/api/tasks/${taskId}`);\n      fetchTasks();\n    } catch (error) {\n      console.error('Failed to delete task:', error);\n    }\n  };\n  const handleEditTask = async (e, task) => {\n    e.preventDefault();\n    try {\n      await axios.put(`http://localhost:5000/api/tasks/${task.id}`, {\n        ...task,\n        text: editingText\n      });\n      setEditingTask(null);\n      setEditingText('');\n      fetchTasks();\n    } catch (error) {\n      console.error('Failed to update task:', error);\n    }\n  };\n\n  // ✨ NEW: Function to toggle the task's completion status\n  const handleToggleComplete = async task => {\n    try {\n      await axios.put(`http://localhost:5000/api/tasks/${task.id}`, {\n        ...task,\n        completed: !task.completed\n      });\n      fetchTasks();\n    } catch (error) {\n      console.error('Failed to update task status:', error);\n    }\n  };\n  const startEditing = task => {\n    setEditingTask(task.id);\n    setEditingText(task.text);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddTask,\n      className: \"add-task-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTaskText,\n        onChange: e => setNewTaskText(e.target.value),\n        placeholder: \"Add a new task...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: task.completed ? 'completed' : '',\n        children: editingTask === task.id ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => handleEditTask(e, task),\n          className: \"edit-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editingText,\n            onChange: e => setEditingText(e.target.value),\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"task-checkbox\",\n            checked: task.completed,\n            onChange: () => handleToggleComplete(task)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"task-text\",\n            children: task.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => startEditing(task),\n              className: \"edit-btn\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteTask(task.id),\n              className: \"delete-btn\",\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoList, \"gUVKHjw1dWjG0AVMUkwEnDNb/vg=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoList","_s","tasks","setTasks","newTaskText","setNewTaskText","editingTask","setEditingTask","editingText","setEditingText","fetchTasks","response","get","data","error","console","handleAddTask","e","preventDefault","trim","post","text","handleDeleteTask","taskId","delete","handleEditTask","task","put","id","handleToggleComplete","completed","startEditing","className","children","onSubmit","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","autoFocus","checked","onClick","_c","$RefreshReg$"],"sources":["D:/Others/0 Assignments/Asho_Todo_List/todo-app/frontend/src/components/TodoList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst TodoList = () => {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [newTaskText, setNewTaskText] = useState('');\r\n    const [editingTask, setEditingTask] = useState(null);\r\n    const [editingText, setEditingText] = useState('');\r\n\r\n    const fetchTasks = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/api/tasks');\r\n            setTasks(response.data);\r\n        } catch (error) {\r\n            console.error('Failed to fetch tasks:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchTasks();\r\n    }, []);\r\n\r\n    const handleAddTask = async (e) => {\r\n        e.preventDefault();\r\n        if (!newTaskText.trim()) return;\r\n        try {\r\n            await axios.post('http://localhost:5000/api/tasks', { text: newTaskText });\r\n            setNewTaskText('');\r\n            fetchTasks(); // Re-fetch tasks to update list\r\n        } catch (error) {\r\n            console.error('Failed to add task:', error);\r\n        }\r\n    };\r\n\r\n    const handleDeleteTask = async (taskId) => {\r\n        try {\r\n            await axios.delete(`http://localhost:5000/api/tasks/${taskId}`);\r\n            fetchTasks();\r\n        } catch (error) {\r\n            console.error('Failed to delete task:', error);\r\n        }\r\n    };\r\n    \r\n    const handleEditTask = async (e, task) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.put(`http://localhost:5000/api/tasks/${task.id}`, { ...task, text: editingText });\r\n            setEditingTask(null);\r\n            setEditingText('');\r\n            fetchTasks();\r\n        } catch (error) {\r\n            console.error('Failed to update task:', error);\r\n        }\r\n    };\r\n\r\n    // ✨ NEW: Function to toggle the task's completion status\r\n    const handleToggleComplete = async (task) => {\r\n        try {\r\n            await axios.put(`http://localhost:5000/api/tasks/${task.id}`, {\r\n                ...task,\r\n                completed: !task.completed\r\n            });\r\n            fetchTasks();\r\n        } catch (error) {\r\n            console.error('Failed to update task status:', error);\r\n        }\r\n    };\r\n\r\n    const startEditing = (task) => {\r\n        setEditingTask(task.id);\r\n        setEditingText(task.text);\r\n    };\r\n\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <form onSubmit={handleAddTask} className=\"add-task-form\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={newTaskText}\r\n                    onChange={(e) => setNewTaskText(e.target.value)}\r\n                    placeholder=\"Add a new task...\"\r\n                />\r\n                <button type=\"submit\">Add Task</button>\r\n            </form>\r\n\r\n            <ul className=\"task-list\">\r\n                {tasks.map((task) => (\r\n                    <li key={task.id} className={task.completed ? 'completed' : ''}>\r\n                        {editingTask === task.id ? (\r\n                            <form onSubmit={(e) => handleEditTask(e, task)} className=\"edit-form\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={editingText}\r\n                                    onChange={(e) => setEditingText(e.target.value)}\r\n                                    autoFocus\r\n                                />\r\n                                <button type=\"submit\">Save</button>\r\n                            </form>\r\n                        ) : (\r\n                            <>\r\n                                {/* ✨ NEW: Checkbox for marking task as done */}\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    className=\"task-checkbox\"\r\n                                    checked={task.completed}\r\n                                    onChange={() => handleToggleComplete(task)}\r\n                                />\r\n                                <span className=\"task-text\">{task.text}</span>\r\n                                <div className=\"task-buttons\">\r\n                                    <button onClick={() => startEditing(task)} className=\"edit-btn\">Edit</button>\r\n                                    <button onClick={() => handleDeleteTask(task.id)} className=\"delete-btn\">Remove</button>\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}